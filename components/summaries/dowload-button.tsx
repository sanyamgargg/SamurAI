"use client";
import { Download } from "lucide-react";
import { Button } from "@/components/ui/button";
import pdfMake from "pdfmake/build/pdfmake";
import "pdfmake/build/vfs_fonts";

export default function DownloadSummaryButton({
  title,
  summary,
  fileName,
  createdAt,
}: {
  title: string;
  summary: string;
  fileName: string;
  createdAt: string;
}) {
  // Clean HTML -> text (basic)
  const stripHtml = (html: string) => {
    const tempDiv = document.createElement("div");
    tempDiv.innerHTML = html;
    return tempDiv.textContent?.replace(/\s+/g, " ").trim() || "";
  };

  const handleDownloadPdf = () => {
    const plainText = stripHtml(summary);

    const docDefinition = {
      content: [
        { text: title, style: "header" },
        { text: `Created At: ${createdAt}`, style: "subheader" },
        { text: plainText, style: "body" },
        { text: "Generated by Your App", style: "footer" },
      ],
      styles: {
        header: { fontSize: 20, bold: true, margin: [0, 0, 0, 10] as [number, number, number, number] },
        subheader: { fontSize: 10, color: "gray", margin: [0, 0, 0, 20] as [number, number, number, number] },
        body: { fontSize: 12, lineHeight: 1.4 },
        footer: { fontSize: 9, italics: true, margin: [0, 40, 0, 0] as [number, number, number, number], color: "gray" },
      },
      defaultStyle: {
        font: "Roboto",
      },
    };

    pdfMake.createPdf(docDefinition).download(
      fileName.endsWith(".pdf") ? fileName : `${fileName}.pdf`
    );
  };

  return (
    <Button
      className="bg-transparent text-gray-300 hover:bg-transparent hover:text-gray-300 hover:border-gray-300 hover:border-2 hover:rounded-md"
      onClick={handleDownloadPdf}
    >
      <Download className="w-4 h-4 mr-2" />
      Download PDF
    </Button>
  );
}